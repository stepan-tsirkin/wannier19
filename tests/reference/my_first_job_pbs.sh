#!/bin/bash

# THIS FILE IS GENERATED BY AUTOMATION SCRIPT! PLEASE REFER TO ORIGINAL SCRIPT!
# THIS FILE IS MODIFIED AUTOMATICALLY FROM TEMPLATE AND SHOULD BE RUNNABLE!

#PBS -N my_first_job_pbs_0601-200028
#PBS -q express
#PBS -l nodes=4:ppn=2:gpus=3
#PBS -l walltime=00:10:00
#PBS -o my_first_job_pbs_0601-200028.log
#PBS -e my_first_job_pbs_0601-200028.err
export OMP_NUM_THREADS=1
cd $PBS_O_WORKDIR

# Load modules or your own conda environment here


################# DON NOT CHANGE THINGS HERE UNLESS YOU KNOW WHAT YOU ARE DOING ###############

# This script is taken and modified from https://github.com/ray-project/ray/issues/10466#issuecomment-737476909

jobnodes=`uniq -c $PBS_NODEFILE | awk -F. '{print $1 }' | awk '{print $2}' | paste -s -d " "`

redis_password=$(uuidgen)
export redis_password

thishost=`uname -n | awk -F. '{print $1.}'`
ip=`hostname -i`
port=6379
ip_head="$ip:$port"
ray_command=$(which ray)
export ip_head
echo "RAY command: $ray_command"
echo "IP Head: $ip_head"

echo "Allocate Nodes = <$jobnodes>"

echo "set up ray cluster..."
for node in `echo $jobnodes`; do
    if [[ $node == "$thishost" ]]; then
        echo "STARTING HEAD at $node"
        ray start --head --node-ip-address=$ip --port=$port --redis-password=$redis_password --num-cpus=3 --block &
        sleep 12.34
    else
        echo "STARTING WORKER at $node"
        ssh $node "$ray_command start --address=$ip_head --redis-password=$redis_password --num-cpus=3"
        sleep 5.0
    fi
done

##############################################################################################

#### call your code below
'python -u wb-example.py' 
